http {
<<<<<<< HEAD
    # Базовые настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Логирование
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
        listen 80;
        server_name localhost;

        # Оптимизированное gzip сжатие
        gzip on;
        gzip_vary on;
        gzip_min_length 256;
        gzip_proxied any;
        gzip_comp_level 9;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json
            application/xml
            application/ld+json
            application/manifest+json
            image/svg+xml
            font/woff
            font/woff2;

=======
    upstream nextjs_upstream {
        server 127.0.0.1:3000;
        keepalive 64;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        server_name localhost;

        # Оптимизированное gzip сжатие
        gzip on;
        gzip_vary on;
        gzip_min_length 256;
        gzip_proxied any;
        gzip_comp_level 9;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json
            application/xml
            application/ld+json
            application/manifest+json
            image/svg+xml
            font/woff
            font/woff2;

>>>>>>> fix/rollback-to-stable-state
        # Включаем brotli сжатие (если доступно)
        brotli on;
        brotli_comp_level 11;
        brotli_min_length 256;
        brotli_types
            text/plain
            text/css
            application/json
            application/javascript
            text/xml
            application/xml
            application/xml+rss
            text/javascript
            application/ld+json
            application/manifest+json
            font/woff
            font/woff2;

<<<<<<< HEAD
        # Настройки кэширования для статических файлов Next.js
        location /_next/static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Обслуживание статических файлов из public напрямую
=======
        # Явные alias для статики из public (Docker-путь /app/public)
>>>>>>> fix/rollback-to-stable-state
        location /projects/ {
            alias /app/public/projects/;
            expires 1y;
            add_header Cache-Control "public, immutable";
<<<<<<< HEAD
            try_files $uri $uri/ =404;
=======
            try_files $uri =404;
>>>>>>> fix/rollback-to-stable-state
        }

        location /brand/ {
            alias /app/public/brand/;
            expires 1y;
            add_header Cache-Control "public, immutable";
<<<<<<< HEAD
            try_files $uri $uri/ =404;
=======
            try_files $uri =404;
>>>>>>> fix/rollback-to-stable-state
        }

        location /clients/ {
            alias /app/public/clients/;
            expires 1y;
            add_header Cache-Control "public, immutable";
<<<<<<< HEAD
            try_files $uri $uri/ =404;
        }

        # Настройки для изображений в корне public
        location ~* ^/[^/]+\.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            root /app/public;
=======
            try_files $uri =404;
        }

        # Настройки кэширования для статических файлов Next.js
        location ^~ /_next/static/ {
>>>>>>> fix/rollback-to-stable-state
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri $uri/ =404;
        }

<<<<<<< HEAD
        # Оптимизатор изображений Next.js: корректная обработка HEAD
        location /_next/image {
            # Преобразуем метод
            set $image_method $request_method;
            if ($request_method = HEAD) { set $image_method GET; }

            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_method $image_method;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
            # Включаем сжатие для проксируемого контента
            proxy_set_header Accept-Encoding gzip;
=======
        # Специальный роут для оптимизатора изображений Next.js
        location ^~ /_next/image {
            proxy_pass http://nextjs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Увеличенные таймауты и буферизация для крупных изображений
            proxy_read_timeout 60s;
            proxy_connect_timeout 60s;
            proxy_buffering on;
            proxy_buffers 16 128k;
            proxy_buffer_size 256k;
        }

        # Общие настройки для изображений (прочие пути)
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri $uri/ =404;
>>>>>>> fix/rollback-to-stable-state
        }

        # Проксирование к Next.js приложению
        location / {
<<<<<<< HEAD
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
=======
            proxy_pass http://nextjs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
>>>>>>> fix/rollback-to-stable-state
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
<<<<<<< HEAD
            proxy_redirect off;
            
=======

>>>>>>> fix/rollback-to-stable-state
            # Включаем сжатие для проксируемого контента
            proxy_set_header Accept-Encoding gzip;
        }
    }
}
